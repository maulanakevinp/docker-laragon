services:
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
      - ${PROJECT_ROOT:-../public_html}:/var/www
      - ./certs:/etc/nginx/certs
    command: /bin/sh -c "nginx -g 'daemon off;'"
    depends_on:
      - php80
      - php81
      - php82
    container_name: nginx

  php80:
    build:
      context: .
      dockerfile: images/php80/Dockerfile
    restart: always
    volumes:
      - ${PROJECT_ROOT:-../public_html}:/var/www
    container_name: php80

  php81:
    build:
      context: .
      dockerfile: images/php81/Dockerfile
    restart: always
    volumes:
      - ${PROJECT_ROOT:-../public_html}:/var/www
    container_name: php81

  php82:
    build:
      context: .
      dockerfile: images/php82/Dockerfile
    restart: always
    volumes:
      - ${PROJECT_ROOT:-../public_html}:/var/www
    container_name: php82

  mysql:
    image: mysql:5.7
    restart: always
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/backup:/backup
      - ./mysql/mysql.conf.d/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD:-root}"
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    container_name: mysql

  mssql:
    image: mcr.microsoft.com/mssql/server
    container_name: sqlserver
    ports:
      - "${MSSQL_PORT:-1433}:1433"
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "${SA_PASSWORD:-YouShallNotP4ss!}"
    volumes:
      - ./mssql_data:/var/opt/mssql
    restart: always

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "${PHPMYADMIN_PORT:-8080}:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: ${MYSQL_USER:-root}
      PMA_PASSWORD: ${MYSQL_PASSWORD:-root}
    depends_on:
      - mysql
    container_name: phpmyadmin

  mailhog:
    image: mailhog/mailhog
    restart: always
    ports:
      - "${MAILHOG_PORT:-8025}:8025"
      - "${MAILHOG_SMTP_PORT:-1025}:1025"
    container_name: mailhog

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "${REDIS_PORT:-6379}:6379"
    container_name: redis

  soketi:
    image: quay.io/soketi/soketi:latest
    container_name: soketi
    restart: unless-stopped
    ports:
      - "${SOKETI_PORT:-6001}:6001"
      - "9601:9601"
    volumes:
      - ./soketi.json:/etc/soketi.json
    command: ["start", "--config=/etc/soketi.json"]

  dozzle:
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8001:8080
    restart: always
    container_name: dozzle

name: docker-laragon